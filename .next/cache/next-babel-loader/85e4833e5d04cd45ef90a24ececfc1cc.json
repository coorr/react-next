{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\";\nimport user from './user.js';\nimport post from './post.js';\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    //  HYDRATE 위해서 추가한 코드(index) - 서버 사이드 렌더링을 위해서 만들어놓는 곳\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user,\n  post\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/src/reducers/index.js"],"names":["HYDRATE","combineReducers","user","post","rootReducer","index","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,MAAMC,WAAW,GAAGH,eAAe,CAAC;AAClCI,EAAAA,KAAK,EAAE,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAAK;AAClC,YAAOA,MAAM,CAACC,IAAd;AACE,WAAKR,OAAL;AACES,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,+CACKD,KADL,GACeC,MAAM,CAACI,OADtB;;AAGF;AACE,eAAOL,KAAP;AAPJ;AASD,GAXiC;AAYlCJ,EAAAA,IAZkC;AAalCC,EAAAA;AAbkC,CAAD,CAAnC;AAgBA,eAAeC,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\"; \r\nimport { combineReducers } from \"redux\";\r\nimport user from './user.js';\r\nimport post from './post.js';\r\n\r\nconst rootReducer = combineReducers({\r\n  index: (state = {}, action) => {    //  HYDRATE 위해서 추가한 코드(index) - 서버 사이드 렌더링을 위해서 만들어놓는 곳\r\n    switch(action.type) {\r\n      case HYDRATE:\r\n        console.log('HYDRATE', action);\r\n        return {\r\n          ...state, ...action.payload\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  user,\r\n  post,\r\n})\r\n    \r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}