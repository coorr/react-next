{"ast":null,"code":"import axios from 'axios';\nimport React from 'react';\nimport { all, fork, call, put, take } from 'redux-saga/effects';\n\nfunction logiInAPI() {\n  return axios.get(\"/api/login\");\n}\n\nfunction* logIn() {\n  try {\n    const result = yield call(logiInAPI);\n    yield put({\n      // action을 dispatch 하는 느낌의 put\n      type: 'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take(\"ADD_POST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield take('LOG_OUT_REQUEST');\n}\n\nfunction* watchAddPost() {\n  yield take('ADD_POST_REQUEST');\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogin)]);\n}","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/src/sagas/index.js"],"names":["axios","React","all","fork","call","put","take","logiInAPI","get","logIn","result","type","data","err","response","watchLogin","watchLogOut","watchAddPost","rootSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA0C,oBAA1C;;AAEA,SAASC,SAAT,GAAqB;AACnB,SAAOP,KAAK,CAACQ,GAAN,CAAU,YAAV,CAAP;AACD;;AAED,UAAUC,KAAV,GAAkB;AAChB,MAAI;AACF,UAAMC,MAAM,GAAI,MAAMN,IAAI,CAACG,SAAD,CAA1B;AACA,UAAMF,GAAG,CAAC;AAAQ;AAChBM,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMR,GAAG,CAAC;AACRM,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,IAAI,EAAGC,GAAG,CAACC,QAAJ,CAAaF;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUG,UAAV,GAAuB;AACrB,QAAMT,IAAI,CAAC,UAAD,EAAaG,KAAb,CAAV;AACD;;AACD,UAAUO,WAAV,GAAwB;AACtB,QAAMV,IAAI,CAAC,iBAAD,CAAV;AACD;;AACD,UAAUW,YAAV,GAAyB;AACvB,QAAMX,IAAI,CAAC,kBAAD,CAAV;AACD;;AAED,eAAe,UAAUY,QAAV,GAAqB;AAClC,QAAMhB,GAAG,CAAC,CACRC,IAAI,CAACY,UAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import axios from 'axios';\r\nimport React from 'react';\r\nimport { all ,fork, call, put, take} from 'redux-saga/effects';\r\n\r\nfunction logiInAPI() {\r\n  return axios.get(\"/api/login\")\r\n}\r\n\r\nfunction* logIn() {\r\n  try {\r\n    const result =  yield call(logiInAPI);\r\n    yield put({       // action을 dispatch 하는 느낌의 put\r\n      type: 'LOG_IN_SUCCESS', \r\n      data: result.data  \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: 'LOG_IN_FAILURE',\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield take(\"ADD_POST\", logIn);\r\n}\r\nfunction* watchLogOut() {\r\n  yield take('LOG_OUT_REQUEST');\r\n}\r\nfunction* watchAddPost() {\r\n  yield take('ADD_POST_REQUEST')\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n  ])\r\n}"]},"metadata":{},"sourceType":"module"}