{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, takeLatest, delay, put } from 'redux-saga/effects';\n\nfunction logiInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* logOut() {\n  try {\n    // const result =  yield call(logiInAPI);\n    yield delay(1000);\n    yield put({\n      // action을 dispatch 하는 느낌의 put\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* logIn(action) {\n  try {\n    // const result =  yield call(logiInAPI);\n    yield delay(1000);\n    yield put({\n      // action을 dispatch 하는 느낌의 put\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSage() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/src/sagas/user.js"],"names":["axios","all","fork","takeLatest","delay","put","logiInAPI","data","post","logOut","type","err","response","logIn","action","watchLogIn","watchLogOut","userSage"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,GAAvC,QAAkD,oBAAlD;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,SAAOP,KAAK,CAACQ,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACD;;AAED,UAAUE,MAAV,GAAmB;AACjB,MAAI;AACF;AACA,UAAML,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AAAQ;AAChBK,MAAAA,IAAI,EAAE;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMN,GAAG,CAAC;AACRK,MAAAA,IAAI,EAAE,iBADE;AAERH,MAAAA,IAAI,EAAGI,GAAG,CAACC,QAAJ,CAAaL;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUM,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMV,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AAAQ;AAChBK,MAAAA,IAAI,EAAE,gBADE;AAERH,MAAAA,IAAI,EAAEO,MAAM,CAACP;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOI,GAAP,EAAY;AACZ,UAAMN,GAAG,CAAC;AACRK,MAAAA,IAAI,EAAE,gBADE;AAERH,MAAAA,IAAI,EAAGI,GAAG,CAACC,QAAJ,CAAaL;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUQ,UAAV,GAAuB;AACrB,QAAMZ,UAAU,CAAC,gBAAD,EAAmBU,KAAnB,CAAhB;AACD;;AAED,UAAUG,WAAV,GAAwB;AACtB,QAAMb,UAAU,CAAC,iBAAD,EAAoBM,MAApB,CAAhB;AACD;;AAGD,eAAe,UAAUQ,QAAV,GAAqB;AAClC,QAAMhB,GAAG,CAAC,CACRC,IAAI,CAACa,UAAD,CADI,EAERb,IAAI,CAACc,WAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, takeLatest, delay, put } from 'redux-saga/effects';\r\n\r\nfunction logiInAPI(data) {\r\n  return axios.post(\"/api/login\", data)\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // const result =  yield call(logiInAPI);\r\n    yield delay(1000);\r\n    yield put({       // action을 dispatch 하는 느낌의 put\r\n      type: 'LOG_OUT_SUCCESS', \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: 'LOG_OUT_FAILURE',\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result =  yield call(logiInAPI);\r\n    yield delay(1000);\r\n    yield put({       // action을 dispatch 하는 느낌의 put\r\n      type: 'LOG_IN_SUCCESS', \r\n      data: action.data\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: 'LOG_IN_FAILURE',\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\r\n}\r\n\r\n\r\nexport default function* userSage() {\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut)\r\n  ])\r\n}"]},"metadata":{},"sourceType":"module"}