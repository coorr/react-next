{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeEvery, takeLatest, delay } from 'redux-saga/effects';\nimport shortid from 'shortid';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result =  yield call(logiInAPI);\n    console.log(action.data);\n    yield delay(1000);\n    const id = shortid.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result =  yield call(addCommentAPI);\n    console.log(action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.post('/api/remove', data);\n}\n\nfunction* removePost(action) {\n  try {\n    // const result =  yield call(removePostAPI);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data // id 값이 들어가있음\n\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost)]);\n}","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/src/sagas/post.js"],"names":["axios","all","fork","call","put","takeEvery","takeLatest","delay","shortid","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","addPostAPI","data","post","addPost","action","console","log","id","generate","type","content","err","response","addCommentAPI","postId","addComment","removePostAPI","removePost","watchAddPost","watchAddComment","watchRemovePost","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,SAA/B,EAA0CC,UAA1C,EAAsDC,KAAtD,QAAkE,oBAAlE;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SACEC,gBADF,EACoBC,gBADpB,EACsCC,gBADtC,EAEEC,mBAFF,EAEuBC,mBAFvB,EAE4CC,mBAF5C,EAEiEC,mBAFjE,EAEsFC,mBAFtF,EAE2GC,mBAF3G,QAGO,kBAHP;AAIA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,kBAAlD;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOrB,KAAK,CAACsB,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACH,IAAnB;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAMoB,EAAE,GAAGnB,OAAO,CAACoB,QAAR,EAAX;AACA,UAAMxB,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEnB,gBADE;AAERW,MAAAA,IAAI,EAAE;AACJM,QAAAA,EADI;AAEJG,QAAAA,OAAO,EAAEN,MAAM,CAACH;AAFZ;AAFE,KAAD,CAAT;AAOA,UAAMjB,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEX,cADE;AAERG,MAAAA,IAAI,EAACM;AAFG,KAAD,CAAT;AAID,GAhBD,CAgBE,OAAOI,GAAP,EAAY;AACZ,UAAM3B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAElB,gBADE;AAERU,MAAAA,IAAI,EAAGU,GAAG,CAACC,QAAJ,CAAaX;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASY,aAAT,CAAuBZ,IAAvB,EAA6B;AAC3B,SAAOrB,KAAK,CAACsB,IAAN,CAAY,aAAYD,IAAI,CAACa,MAAO,UAApC,EAA+Cb,IAA/C,CAAP;AACD;;AAED,UAAUc,UAAV,CAAqBX,MAArB,EAA6B;AAC3B,MAAI;AACF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACH,IAAnB;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAMH,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEhB,mBADE;AAERQ,MAAAA,IAAI,EAACG,MAAM,CAACH;AAFJ,KAAD,CAAT;AAID,GARD,CAQE,OAAOU,GAAP,EAAY;AACZ,UAAM3B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEf,mBADE;AAERO,MAAAA,IAAI,EAAGU,GAAG,CAACC,QAAJ,CAAaX;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASe,aAAT,CAAuBf,IAAvB,EAA6B;AAC3B,SAAOrB,KAAK,CAACsB,IAAN,CAAW,aAAX,EAA0BD,IAA1B,CAAP;AACD;;AAED,UAAUgB,UAAV,CAAqBb,MAArB,EAA6B;AAC3B,MAAI;AACF;AACA,UAAMjB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMH,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEb,mBADE;AAERK,MAAAA,IAAI,EAAEG,MAAM,CAACH,IAFL,CAEW;;AAFX,KAAD,CAAT;AAIA,UAAMjB,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEV,iBADE;AAERE,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAXD,CAWE,OAAOU,GAAP,EAAY;AACZ,UAAM3B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEZ,mBADE;AAERI,MAAAA,IAAI,EAAGU,GAAG,CAACC,QAAJ,CAAaX;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUiB,YAAV,GAAyB;AACvB,QAAMhC,UAAU,CAACG,gBAAD,EAAmBc,OAAnB,CAAhB;AACD;;AAED,UAAUgB,eAAV,GAA4B;AAC1B,QAAMjC,UAAU,CAACG,gBAAD,EAAmBc,OAAnB,CAAhB;AACD;;AAED,UAAUiB,eAAV,GAA4B;AAC1B,QAAMlC,UAAU,CAACS,mBAAD,EAAsBsB,UAAtB,CAAhB;AACD;;AAGD,eAAe,UAAUI,QAAV,GAAqB;AAClC,QAAMxC,GAAG,CAAC,CACRC,IAAI,CAACoC,YAAD,CADI,EAERpC,IAAI,CAACqC,eAAD,CAFI,EAGRrC,IAAI,CAACsC,eAAD,CAHI,CAAD,CAAT;AAKD","sourcesContent":["import axios from 'axios';\r\nimport { all ,fork, call, put, takeEvery, takeLatest, delay} from 'redux-saga/effects';\r\nimport shortid from 'shortid';\r\nimport { \r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/api/post', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    // const result =  yield call(logiInAPI);\r\n    console.log(action.data);\r\n    yield delay(1000);\r\n    const id = shortid.generate();\r\n    yield put({       \r\n      type: ADD_POST_SUCCESS, \r\n      data: {\r\n        id,\r\n        content: action.data\r\n      }\r\n    })\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data:id,\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/api/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    // const result =  yield call(addCommentAPI);\r\n    console.log(action.data);\r\n    yield delay(1000);\r\n    yield put({       \r\n      type: ADD_COMMENT_SUCCESS, \r\n      data:action.data\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.post('/api/remove', data);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    // const result =  yield call(removePostAPI);\r\n    yield delay(1000);\r\n    yield put({       \r\n      type: REMOVE_POST_SUCCESS, \r\n      data: action.data  // id 값이 들어가있음\r\n    }) \r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n    fork(watchRemovePost),\r\n  ])\r\n}"]},"metadata":{},"sourceType":"module"}