{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sysone\\\\Desktop\\\\react-next\\\\src\\\\components\\\\CommentForm.js\";\nimport { Button, Input, Form } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  console.log(\"asdasd\", post);\n  const dispatch = useDispatch();\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.user);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  console.log(id);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          zIndex: 1,\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: addCommentLoading,\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nCommentForm.proTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/src/components/CommentForm.js"],"names":["Button","Input","Form","React","useCallback","useEffect","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","console","log","dispatch","addCommentDone","addCommentLoading","state","user","id","me","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","postId","userId","position","margin","zIndex","right","bottom","proTypes","object","isRequired"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAuBC,IAAvB,QAAmC,MAAnC;AACA,OAAOC,KAAP,IAAcC,WAAd,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,IAArB;AACA,QAAMG,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA,cAAF;AAAiBC,IAAAA;AAAjB,MAAuCR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxD;AAEA,QAAMC,EAAE,GAAGX,WAAW,CAAES,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWE,EAAtB,mDAAW,eAAeD,EAA1B;AAAA,GAAD,CAAtB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYM,EAAZ;AACA,QAAM,CAACE,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDlB,QAAQ,CAAC,EAAD,CAAnE;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGW,cAAH,EAAmB;AACjBQ,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIP,CAACR,cAAD,CAJO,CAAT;AAMA,QAAMS,eAAe,GAAGrB,WAAW,CAAC,MAAM;AACxCS,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACQ,EAAjB,EAAqBE,WAArB;AACAP,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEhB,mBADC;AAEPiB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEN,WAAX;AAAwBO,QAAAA,MAAM,EAAGjB,IAAI,CAACQ,EAAtC;AAA0CU,QAAAA,MAAM,EAAEV;AAAlD;AAFC,KAAD,CAAR;AAID,GANkC,EAMhC,CAACE,WAAD,EAAcF,EAAd,CANgC,CAAnC;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEK,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACM,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,MAAM,EAAC;AAA9B,OAAlB;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEV,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAACU,UAAAA,MAAM,EAAC,CAAR;AAAWF,UAAAA,QAAQ,EAAC,UAApB;AAAgCG,UAAAA,KAAK,EAAC,CAAtC;AAAyCC,UAAAA,MAAM,EAAC,CAAC;AAAjD,SADT;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,QAAQ,EAAC,QAHX;AAIE,QAAA,OAAO,EAAElB,iBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CApCD;;AAsCAN,WAAW,CAACyB,QAAZ,GAAuB;AACrBxB,EAAAA,IAAI,EAAEL,SAAS,CAAC8B,MAAV,CAAiBC;AADF,CAAvB;AAIA,eAAe3B,WAAf","sourcesContent":["import { Button, Input,Form } from 'antd';\r\nimport React,{useCallback, useEffect} from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst CommentForm = ({post}) => {\r\n  console.log(\"asdasd\",post);\r\n  const dispatch = useDispatch();\r\n  const { addCommentDone,addCommentLoading } = useSelector((state) => state.user);\r\n\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  console.log(id);\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput(''); \r\n\r\n  useEffect(() => {\r\n    if(addCommentDone) {\r\n      setCommentText('');\r\n    }\r\n  },[addCommentDone])\r\n  \r\n  const onSubmitComment = useCallback(() => {\r\n    console.log(post.id, commentText);\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, postId : post.id, userId: id},\r\n    })\r\n  }, [commentText, id]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{position: 'relative', margin:0}}>\r\n        <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n        <Button \r\n          style={{zIndex:1, position:'absolute', right:0, bottom:-40}} \r\n          type='primary' \r\n          htmlType='submit' \r\n          loading={addCommentLoading}\r\n          >삐약</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.proTypes = {\r\n  post: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}