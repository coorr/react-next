{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeEvery, takeLatest, delay, throttle } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction loadPostsAPI(data) {\n  return axios.get('/posts', data);\n}\n\nfunction* loadPosts(action) {\n  console.log(action.dat);\n\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.post('/api/remove', data);\n}\n\nfunction* removePost(action) {\n  try {\n    // const result =  yield call(removePostAPI);\n    yield delay(1000);\n    console.log(\"aasdasd\");\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data // id 값이 들어가있음\n\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPosts)]);\n}","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/front/src/sagas/post.js"],"names":["axios","all","fork","call","put","takeEvery","takeLatest","delay","throttle","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostsAPI","data","get","loadPosts","action","console","log","dat","result","type","err","response","addPostAPI","post","content","addPost","id","addCommentAPI","postId","addComment","removePostAPI","removePost","watchLoadPosts","watchAddPost","watchAddComment","watchRemovePost","postSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all ,fork, call, put, takeEvery, takeLatest, delay, throttle} from 'redux-saga/effects';\r\nimport { \r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, \r\n  REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, \r\n  LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE,\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\nfunction loadPostsAPI(data) {\r\n  return axios.get('/posts', data);\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  console.log(action.dat);\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.data);\r\n    yield put({       \r\n      type: LOAD_POSTS_SUCCESS, \r\n      data: result.data\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post', {content: data});\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result =  yield call(addPostAPI, action.data);\r\n    yield put({       \r\n      type: ADD_POST_SUCCESS, \r\n      data: result.data,\r\n    })\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result =  yield call(addCommentAPI, action.data);\r\n    yield put({       \r\n      type: ADD_COMMENT_SUCCESS, \r\n      data: result.data\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.post('/api/remove', data);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    // const result =  yield call(removePostAPI);\r\n    yield delay(1000);\r\n    console.log(\"aasdasd\");\r\n    yield put({       \r\n      type: REMOVE_POST_SUCCESS, \r\n      data: action.data  // id 값이 들어가있음\r\n    }) \r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\n\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n    fork(watchRemovePost),\r\n    fork(watchLoadPosts)\r\n  ])\r\n}"]},"metadata":{},"sourceType":"module"}