{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) // 빌드용\n  : composeWithDevTools(applyMiddleware(...middlewares)); // 개발용\n\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/src/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAG,QACbN,OAAO,CAACD,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CADM,CAC6B;AAD7B,IAEbH,mBAAmB,CAACH,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAFvB,CAF2B,CAI+B;;AAC1D,QAAME,KAAK,GAAGN,WAAW,CAACE,OAAD,EAAUG,QAAV,CAAzB;AACA,SAAOC,KAAP;AACD,CAPD;;AAQC,MAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAC5CK,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAKC,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from '../reducers'\r\n\r\nconst configureStore = () => {\r\n  const middlewares = [];\r\n  const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))  // 빌드용\r\n    : composeWithDevTools(applyMiddleware(...middlewares))  // 개발용\r\n  const store = createStore(reducer, enhancer);\r\n  return store;\r\n}\r\n const wrapper = createWrapper(configureStore, { \r\n   debug: process.env.NODE_ENV === 'development',\r\n\r\n  })\r\n\r\n  export default wrapper;  "]},"metadata":{},"sourceType":"module"}