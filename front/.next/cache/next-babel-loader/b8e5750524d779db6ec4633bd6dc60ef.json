{"ast":null,"code":"import shortid from \"shortid\";\nimport { ADD_POST_TO_ME } from \"./user\";\nimport produce from 'immer';\nimport faker from '@withshepherd/faker';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePost: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n}); // reducer == 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성을 지키면서)\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      draft.mainPosts = action.data.concat(draft.mainPosts);\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.loadPostsError = null;\n      draft.hasMorePost = draft.mainPosts.length < 50;\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.mainPosts.unshift(action.data);\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.addPostError = null;\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.removePostError = null;\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        console.log(draft);\n        console.log(draft.mainPosts);\n        console.log(draft.mainPosts.find(v => console.log(v.id)));\n        console.log(post);\n        post.Comments.unshift(action.data.content); // 게시글 글 넣어주기\n\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        draft.addCommentError = null;\n        break;\n      }\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/front/src/reducers/post.js"],"names":["shortid","ADD_POST_TO_ME","produce","faker","initialState","mainPosts","imagePaths","hasMorePost","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","concat","length","error","unshift","filter","v","id","post","find","PostId","console","log","Comments","content"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,EADe;AAE1BC,EAAAA,UAAU,EAAE,EAFc;AAG1BC,EAAAA,WAAW,EAAE,IAHa;AAI1BC,EAAAA,gBAAgB,EAAE,KAJQ;AAK1BC,EAAAA,aAAa,EAAE,KALW;AAM1BC,EAAAA,cAAc,EAAE,IANU;AAQ1BC,EAAAA,cAAc,EAAE,KARU;AAS1BC,EAAAA,WAAW,EAAE,KATa;AAU1BC,EAAAA,YAAY,EAAE,IAVY;AAY1BC,EAAAA,iBAAiB,EAAE,KAZO;AAa1BC,EAAAA,cAAc,EAAE,KAbU;AAc1BC,EAAAA,eAAe,EAAE,IAdS;AAgB1BC,EAAAA,iBAAiB,EAAE,KAhBO;AAiB1BC,EAAAA,cAAc,EAAE,KAjBU;AAkB1BC,EAAAA,eAAe,EAAE;AAlBS,CAArB;AAqBP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEX,gBAD0B;AAEhCU,EAAAA;AAFgC,CAAX,CAAhB;AAKP,OAAO,MAAME,UAAU,GAAIF,IAAD,KAAW;AACnCC,EAAAA,IAAI,EAAEL,mBAD6B;AAEnCI,EAAAA;AAFmC,CAAX,CAAnB,C,CAKP;;AACA,MAAMG,OAAO,GAAG,CAACC,KAAK,GAAGjC,YAAT,EAAsBkC,MAAtB,KAAiCpC,OAAO,CAACmC,KAAD,EAASE,KAAD,IAAW;AACvE,UAAOD,MAAM,CAACJ,IAAd;AACE,SAAKd,kBAAL;AACEmB,MAAAA,KAAK,CAAC/B,gBAAN,GAAuB,IAAvB;AACA+B,MAAAA,KAAK,CAAC9B,aAAN,GAAoB,KAApB;AACA8B,MAAAA,KAAK,CAAC7B,cAAN,GAAqB,IAArB;AACA;;AACF,SAAKW,kBAAL;AACEkB,MAAAA,KAAK,CAAClC,SAAN,GAAkBiC,MAAM,CAACL,IAAP,CAAYO,MAAZ,CAAmBD,KAAK,CAAClC,SAAzB,CAAlB;AACAkC,MAAAA,KAAK,CAAC/B,gBAAN,GAAuB,KAAvB;AACA+B,MAAAA,KAAK,CAAC9B,aAAN,GAAoB,IAApB;AACA8B,MAAAA,KAAK,CAAC7B,cAAN,GAAqB,IAArB;AACA6B,MAAAA,KAAK,CAAChC,WAAN,GAAoBgC,KAAK,CAAClC,SAAN,CAAgBoC,MAAhB,GAAyB,EAA7C;AACA;;AACF,SAAKnB,kBAAL;AACEiB,MAAAA,KAAK,CAAC/B,gBAAN,GAAuB,KAAvB;AACA+B,MAAAA,KAAK,CAAC7B,cAAN,GAAqB4B,MAAM,CAACI,KAA5B;AACA;;AAEF,SAAKnB,gBAAL;AACEgB,MAAAA,KAAK,CAAC5B,cAAN,GAAqB,IAArB;AACA4B,MAAAA,KAAK,CAAC3B,WAAN,GAAkB,KAAlB;AACA2B,MAAAA,KAAK,CAAC1B,YAAN,GAAmB,IAAnB;AACA;;AACF,SAAKW,gBAAL;AACEe,MAAAA,KAAK,CAAClC,SAAN,CAAgBsC,OAAhB,CAAwBL,MAAM,CAACL,IAA/B;AACAM,MAAAA,KAAK,CAAC5B,cAAN,GAAqB,KAArB;AACA4B,MAAAA,KAAK,CAAC3B,WAAN,GAAkB,IAAlB;AACA2B,MAAAA,KAAK,CAAC1B,YAAN,GAAmB,IAAnB;AACA;;AACF,SAAKY,gBAAL;AACEc,MAAAA,KAAK,CAAC5B,cAAN,GAAqB,KAArB;AACA4B,MAAAA,KAAK,CAAC1B,YAAN,GAAmByB,MAAM,CAACI,KAA1B;AACA;;AAEF,SAAKhB,mBAAL;AACEa,MAAAA,KAAK,CAACzB,iBAAN,GAAwB,IAAxB;AACAyB,MAAAA,KAAK,CAACxB,cAAN,GAAqB,KAArB;AACAwB,MAAAA,KAAK,CAACvB,eAAN,GAAsB,IAAtB;AACA;;AACF,SAAKW,mBAAL;AACEY,MAAAA,KAAK,CAAClC,SAAN,GAAiBkC,KAAK,CAAClC,SAAN,CAAgBuC,MAAhB,CAAwBC,CAAD,IAAMA,CAAC,CAACC,EAAF,KAASR,MAAM,CAACL,IAA7C,CAAjB;AACAM,MAAAA,KAAK,CAACzB,iBAAN,GAAwB,KAAxB;AACAyB,MAAAA,KAAK,CAACxB,cAAN,GAAqB,IAArB;AACAwB,MAAAA,KAAK,CAACvB,eAAN,GAAsB,IAAtB;AACA;;AACF,SAAKY,mBAAL;AACEW,MAAAA,KAAK,CAACzB,iBAAN,GAAwB,KAAxB;AACAyB,MAAAA,KAAK,CAACvB,eAAN,GAAsBsB,MAAM,CAACI,KAA7B;AACA;;AAEF,SAAKb,mBAAL;AACEU,MAAAA,KAAK,CAACtB,iBAAN,GAAwB,IAAxB;AACAsB,MAAAA,KAAK,CAACrB,cAAN,GAAqB,KAArB;AACA;;AACF,SAAKY,mBAAL;AAA0B;AACxB,cAAMiB,IAAI,GAAGR,KAAK,CAAClC,SAAN,CAAgB2C,IAAhB,CAAsBH,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASR,MAAM,CAACL,IAAP,CAAYgB,MAAjD,CAAb;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAaZ,KAAK,CAAClC,SAAnB;AACA6C,QAAAA,OAAO,CAACC,GAAR,CAAaZ,KAAK,CAAClC,SAAN,CAAgB2C,IAAhB,CAAqBH,CAAC,IAAIK,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACC,EAAd,CAA1B,CAAb;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAA,QAAAA,IAAI,CAACK,QAAL,CAAcT,OAAd,CAAsBL,MAAM,CAACL,IAAP,CAAYoB,OAAlC,EANwB,CAMsB;;AAC9Cd,QAAAA,KAAK,CAACtB,iBAAN,GAAwB,KAAxB;AACAsB,QAAAA,KAAK,CAACrB,cAAN,GAAqB,IAArB;AACAqB,QAAAA,KAAK,CAACpB,eAAN,GAAsB,IAAtB;AACA;AACD;;AACD,SAAKY,mBAAL;AACEQ,MAAAA,KAAK,CAACtB,iBAAN,GAAwB,KAAxB;AACAsB,MAAAA,KAAK,CAACpB,eAAN,GAAsBmB,MAAM,CAACI,KAA7B;AACA;;AACF;AACE;AAvEJ;AAyED,CA1EqD,CAAxD;;AA6EA,eAAeN,OAAf","sourcesContent":["import shortid from \"shortid\";\r\nimport { ADD_POST_TO_ME } from \"./user\";\r\nimport produce from 'immer';\r\nimport faker from '@withshepherd/faker';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePost: true,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n}\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\"; \r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n})\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n})\r\n\r\n// reducer == 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성을 지키면서)\r\nconst reducer = (state = initialState,action) => produce(state, (draft) => {\r\n    switch(action.type) {\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading=true;\r\n        draft.loadPostsDone=false;\r\n        draft.loadPostsError=null;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.mainPosts = action.data.concat(draft.mainPosts);\r\n        draft.loadPostsLoading=false;\r\n        draft.loadPostsDone=true;\r\n        draft.loadPostsError=null;\r\n        draft.hasMorePost = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading=false;\r\n        draft.loadPostsError=action.error\r\n        break;\r\n\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading=true;\r\n        draft.addPostDone=false;\r\n        draft.addPostError=null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.mainPosts.unshift(action.data);\r\n        draft.addPostLoading=false;\r\n        draft.addPostDone=true;\r\n        draft.addPostError=null;\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading=false;\r\n        draft.addPostError=action.error\r\n        break;\r\n  \r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading=true;\r\n        draft.removePostDone=false;\r\n        draft.removePostError=null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.mainPosts= draft.mainPosts.filter((v)=> v.id !== action.data);\r\n        draft.removePostLoading=false;\r\n        draft.removePostDone=true;\r\n        draft.removePostError=null;\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading=false;\r\n        draft.removePostError=action.error\r\n        break;\r\n  \r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading=true;\r\n        draft.addCommentDone=false;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);  \r\n        console.log(draft)\r\n        console.log( draft.mainPosts);\r\n        console.log( draft.mainPosts.find(v => console.log(v.id)));\r\n        console.log(post);\r\n        post.Comments.unshift(action.data.content);   // 게시글 글 넣어주기\r\n        draft.addCommentLoading=false;\r\n        draft.addCommentDone=true;\r\n        draft.addCommentError=null;\r\n        break;\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading=false;\r\n        draft.addCommentError=action.error\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  })\r\n\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}