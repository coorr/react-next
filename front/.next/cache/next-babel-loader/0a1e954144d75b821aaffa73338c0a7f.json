{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sysone\\\\Desktop\\\\react-next\\\\front\\\\src\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { UPLOAD_IMAGES_REQUEST, REMOVE_REQUEST, ADD_POST_REQUEST } from '../reducers/post';\nimport { backUrl } from '../config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  _s();\n\n  const {\n    imagePaths,\n    addPostDone,\n    addPostLoading\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert(\"게시글을 작성하세요.\");\n    }\n\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_REQUEST,\n      data: index\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        loading: addPostLoading,\n        children: \"\\uCA31\\uCA31\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map((v, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${backUrl}/${v}`,\n          style: {\n            width: '200px'\n          },\n          alt: v\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onRemoveImage(i),\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"oE2V+ucPh/uyGX6DH0vIAdYvfrI=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/front/src/components/PostForm.js"],"names":["Button","Form","Input","React","useCallback","useEffect","useRef","useState","useDispatch","useSelector","useInput","UPLOAD_IMAGES_REQUEST","REMOVE_REQUEST","ADD_POST_REQUEST","backUrl","PostForm","imagePaths","addPostDone","addPostLoading","state","post","dispatch","text","onChangeText","setText","onSubmit","trim","alert","formData","FormData","forEach","p","append","type","data","imageInput","onClickImageUpload","current","click","onChangeImages","e","imageFormData","call","target","files","f","onRemoveImage","index","margin","float","map","v","i","display","width"],"mappings":"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","sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\nimport { UPLOAD_IMAGES_REQUEST ,REMOVE_REQUEST, ADD_POST_REQUEST} from '../reducers/post';\r\nimport { backUrl } from '../config/config'\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths , addPostDone, addPostLoading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n  const [text , onChangeText, setText] = useInput('');\r\n\r\n  useEffect(() => {\r\n    if(addPostDone) {\r\n      setText('');\r\n    }\r\n  },[addPostDone])\r\n  \r\n  const onSubmit = useCallback(() => {\r\n    if(!text || !text.trim()) {\r\n      return alert(\"게시글을 작성하세요.\")\r\n    }\r\n    const formData = new FormData();\r\n    imagePaths.forEach((p) => {\r\n      formData.append('image', p);\r\n    });\r\n    formData.append('content', text);\r\n    return dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: formData,\r\n    })\r\n  }, [text, imagePaths]);\r\n\r\n  const imageInput = useRef();\r\n  const onClickImageUpload = useCallback(()=> {\r\n    imageInput.current.click();\r\n  }, [imageInput.current])\r\n\r\n  const onChangeImages = useCallback((e) => {\r\n    const imageFormData = new FormData();\r\n    [].forEach.call(e.target.files, (f) => {\r\n      imageFormData.append('image', f);\r\n    })\r\n    \r\n    dispatch({\r\n      type: UPLOAD_IMAGES_REQUEST,\r\n      data: imageFormData,\r\n    })\r\n  })\r\n\r\n  const onRemoveImage = useCallback((index) => () => {\r\n    dispatch({\r\n      type: REMOVE_REQUEST,\r\n      data: index\r\n    })\r\n  })\r\n\r\n  return (\r\n    <Form style={{margin: '10px 0 20px'}} encType='multipart/form-data' onFinish={onSubmit} >\r\n      <Input.TextArea \r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder='어떤 신기한 일이 있었나요?'\r\n      />\r\n      <div>\r\n        <input type='file' name='image'  multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n        <Button onClick={onClickImageUpload} >이미지 업로드</Button>\r\n        <Button type='primary' style={{float: 'right'}} htmlType='submit' loading={addPostLoading} >쨱쨱</Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v,i) => (\r\n          <div key={v} style={{display: 'inline-block'}}>\r\n            <img src={`${backUrl}/${v}`} style={{width: '200px'}} alt={v} />\r\n            <div>\r\n              <Button onClick={onRemoveImage(i)}>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;   "]},"metadata":{},"sourceType":"module"}