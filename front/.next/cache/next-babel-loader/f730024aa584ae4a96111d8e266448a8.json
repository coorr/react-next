{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { Button, Input, Form } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone,\n      addCommentLoading = _useSelector.addCommentLoading;\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1],\n      setCommentText = _useInput2[2];\n\n  useEffect(function () {\n    console.log(addCommentDone);\n\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsx(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxs(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsx(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }), /*#__PURE__*/_jsx(Button, {\n        style: {\n          zIndex: 1,\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: addCommentLoading,\n        children: \"\\uC090\\uC57D\"\n      })]\n    })\n  });\n};\n\nCommentForm.proTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/front/src/components/CommentForm.js"],"names":["Button","Input","Form","React","useCallback","useEffect","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","state","addCommentDone","addCommentLoading","id","user","me","commentText","onChangeCommentText","setCommentText","console","log","onSubmitComment","type","data","content","postId","userId","position","margin","zIndex","right","bottom","proTypes","object","isRequired"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAuBC,IAAvB,QAAmC,MAAnC;AACA,OAAOC,KAAP,IAAcC,WAAd,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAC9B,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AACA,qBAA6CC,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACF,IAAjB;AAAA,GAAD,CAAxD;AAAA,MAAQG,cAAR,gBAAQA,cAAR;AAAA,MAAuBC,iBAAvB,gBAAuBA,iBAAvB;;AAEA,MAAMC,EAAE,GAAGR,WAAW,CAAC,UAACK,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACI,IAAN,CAAWC,EAAtB,mDAAW,eAAeF,EAA1B;AAAA,GAAD,CAAtB;;AACA,kBAA2DX,QAAQ,CAAC,EAAD,CAAnE;AAAA;AAAA,MAAOc,WAAP;AAAA,MAAoBC,mBAApB;AAAA,MAAyCC,cAAzC;;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,OAAO,CAACC,GAAR,CAAYT,cAAZ;;AACA,QAAGA,cAAH,EAAmB;AACjBO,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GALQ,EAKP,CAACP,cAAD,CALO,CAAT;AAOA,MAAMU,eAAe,GAAGrB,WAAW,CAAC,YAAM;AACxCmB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACK,EAAjB,EAAqBG,WAArB;AACAP,IAAAA,QAAQ,CAAC;AACPa,MAAAA,IAAI,EAAEhB,mBADC;AAEPiB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAER,WAAX;AAAwBS,QAAAA,MAAM,EAAGjB,IAAI,CAACK,EAAtC;AAA0Ca,QAAAA,MAAM,EAAEb;AAAlD;AAFC,KAAD,CAAR;AAID,GANkC,EAMhC,CAACG,WAAD,EAAcH,EAAd,CANgC,CAAnC;AAQA,sBACE,KAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,eAAhB;AAAA,2BACE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACM,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,MAAM,EAAC;AAA9B,OAAlB;AAAA,8BACE,KAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEZ,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE,QADF,eAEE,KAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAACY,UAAAA,MAAM,EAAC,CAAR;AAAWF,UAAAA,QAAQ,EAAC,UAApB;AAAgCG,UAAAA,KAAK,EAAC,CAAtC;AAAyCC,UAAAA,MAAM,EAAC,CAAC;AAAjD,SADT;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,QAAQ,EAAC,QAHX;AAIE,QAAA,OAAO,EAAEnB,iBAJX;AAAA;AAAA,QAFF;AAAA;AADF,IADF;AAaD,CAnCD;;AAqCAL,WAAW,CAACyB,QAAZ,GAAuB;AACrBxB,EAAAA,IAAI,EAAEL,SAAS,CAAC8B,MAAV,CAAiBC;AADF,CAAvB;AAIA,eAAe3B,WAAf","sourcesContent":["import { Button, Input,Form } from 'antd';\r\nimport React,{useCallback, useEffect} from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst CommentForm = ({post}) => {\r\n  const dispatch = useDispatch();\r\n  const { addCommentDone,addCommentLoading } = useSelector((state) => state.post);\r\n\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput(''); \r\n\r\n  useEffect(() => {\r\n    console.log(addCommentDone);\r\n    if(addCommentDone) {\r\n      setCommentText('');\r\n    }\r\n  },[addCommentDone])\r\n  \r\n  const onSubmitComment = useCallback(() => {\r\n    console.log(post.id, commentText);\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, postId : post.id, userId: id},\r\n    })\r\n  }, [commentText, id]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{position: 'relative', margin:0}}>\r\n        <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n        <Button \r\n          style={{zIndex:1, position:'absolute', right:0, bottom:-40}} \r\n          type='primary' \r\n          htmlType='submit' \r\n          loading={addCommentLoading}\r\n          >삐약</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.proTypes = {\r\n  post: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}