{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeEvery, takeLatest, delay, throttle } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, RETWEET_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  console.log(asdasd);\n\n  try {\n    console.log(result);\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: \"ㅁㄴㅇㅁㄴㅇ\"\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    console.log(result);\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    console.log(result);\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    console.log(result);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: RETWEET_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchLoadRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPosts), fork(watchLoadPost), fork(watchLikePost), fork(watchUnlikePost), fork(watchChangeNickname), fork(watchLoadUploadImages), fork(watchLoadRetweet)]);\n}","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/front/src/sagas/post.js"],"names":["axios","all","fork","call","put","takeEvery","takeLatest","delay","throttle","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","RETWEET_SUCCESS","RETWEET_FAILURE","RETWEET_REQUEST","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_TO_ME","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","REMOVE_POST_OF_ME","loadPostsAPI","lastId","get","loadPosts","action","console","log","asdasd","result","type","data","err","error","loadPostAPI","loadPost","response","addPostAPI","post","addPost","id","addCommentAPI","postId","addComment","removePostAPI","delete","removePost","likePostAPI","patch","likePost","unlikePostAPI","unlikePost","changeNicknameAPI","nickname","changeNickname","uploadImagesAPI","uploadImages","retweetAPI","retweet","watchLoadPosts","watchLoadPost","watchAddPost","watchAddComment","watchRemovePost","watchLikePost","watchUnlikePost","watchChangeNickname","watchLoadUploadImages","watchLoadRetweet","postSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all ,fork, call, put, takeEvery, takeLatest, delay, throttle} from 'redux-saga/effects';\r\nimport { \r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, \r\n  REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, \r\n  LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, \r\n  LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, \r\n  LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE,\r\n  UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, \r\n  RETWEET_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST, \r\n  LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE,\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\nfunction loadPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  console.log(asdasd);\r\n  try {\r\n    console.log(result);\r\n    const result = yield call(loadPostsAPI, action.lastId);\r\n    yield put({       \r\n      type: LOAD_POSTS_SUCCESS, \r\n      data: result.data\r\n    })\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      error : \"ㅁㄴㅇㅁㄴㅇ\"\r\n    })\r\n  }   \r\n}\r\n\r\nfunction loadPostAPI(data) {\r\n  return axios.get(`/post/${data}`);\r\n}\r\n\r\nfunction* loadPost(action) {\r\n  try {\r\n    console.log(result);\r\n    const result = yield call(loadPostAPI, action.data);\r\n    yield put({       \r\n      type: LOAD_POST_SUCCESS, \r\n      data: result.data\r\n    })\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post',  data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    console.log(result);\r\n    const result =  yield call(addPostAPI, action.data);\r\n    yield put({       \r\n      type: ADD_POST_SUCCESS, \r\n      data: result.data,\r\n    })\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result =  yield call(addCommentAPI, action.data);\r\n    console.log(result);\r\n    yield put({       \r\n      type: ADD_COMMENT_SUCCESS, \r\n      data: result.data\r\n    }) \r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result =  yield call(removePostAPI, action.data);\r\n    yield put({       \r\n      type: REMOVE_POST_SUCCESS, \r\n      data: result.data \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result =  yield call(likePostAPI, action.data);\r\n    yield put({       \r\n      type: LIKE_POST_SUCCESS, \r\n      data: result.data  \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result =  yield call(unlikePostAPI, action.data);\r\n    yield put({       \r\n      type: UNLIKE_POST_SUCCESS, \r\n      data: result.data  \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n  return axios.patch('/user/nickname', { nickname: data });\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n  try {\r\n    const result =  yield call(changeNicknameAPI, action.data);\r\n    yield put({       \r\n      type: CHANGE_NICKNAME_SUCCESS, \r\n      data: result.data  \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post('/post/images', data);\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result =  yield call(uploadImagesAPI, action.data);\r\n    yield put({       \r\n      type: UPLOAD_IMAGES_SUCCESS, \r\n      data: result.data\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction retweetAPI(data) {\r\n  return axios.post(`/post/${data}/retweet`);\r\n}\r\n\r\nfunction* retweet(action) {\r\n  try {\r\n    const result =  yield call(retweetAPI, action.data);\r\n    yield put({       \r\n      type: RETWEET_SUCCESS, \r\n      data: result.data\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: RETWEET_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\r\n}\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nfunction* watchLoadUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages)\r\n}\r\nfunction* watchLoadRetweet() {\r\n  yield takeLatest(RETWEET_REQUEST, retweet)\r\n}\r\n\r\n\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n    fork(watchRemovePost),\r\n    fork(watchLoadPosts),\r\n    fork(watchLoadPost),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n    fork(watchChangeNickname),\r\n    fork(watchLoadUploadImages),\r\n    fork(watchLoadRetweet),\r\n  ])\r\n}"]},"metadata":{},"sourceType":"module"}