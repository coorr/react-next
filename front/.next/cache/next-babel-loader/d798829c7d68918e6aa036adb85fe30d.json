{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeEvery, takeLatest, delay, throttle } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction loadPostsAPI() {\n  return axios.get('/posts');\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    console.log(result);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  console.log(data);\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    console.log(result);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPosts), fork(watchLikePost), fork(watchUnlikePost), fork(watchChangeNickname)]);\n}","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/front/src/sagas/post.js"],"names":["axios","all","fork","call","put","takeEvery","takeLatest","delay","throttle","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_POST_TO_ME","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","REMOVE_POST_OF_ME","loadPostsAPI","get","loadPosts","action","result","data","console","log","type","err","error","response","addPostAPI","post","content","addPost","id","addCommentAPI","postId","addComment","removePostAPI","delete","removePost","likePostAPI","patch","likePost","unlikePostAPI","unlikePost","changeNicknameAPI","nickname","changeNickname","watchLoadPosts","watchAddPost","watchAddComment","watchRemovePost","watchLikePost","watchUnlikePost","watchChangeNickname","postSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all ,fork, call, put, takeEvery, takeLatest, delay, throttle} from 'redux-saga/effects';\r\nimport { \r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, \r\n  REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, \r\n  LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE,\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\nfunction loadPostsAPI() {\r\n  return axios.get('/posts');\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.data);\r\n    console.log(result);\r\n    yield put({       \r\n      type: LOAD_POSTS_SUCCESS, \r\n      data: result.data\r\n    })\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post', {content: data});\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result =  yield call(addPostAPI, action.data);\r\n    yield put({       \r\n      type: ADD_POST_SUCCESS, \r\n      data: result.data,\r\n    })\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  console.log(data);\r\n  return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result =  yield call(addCommentAPI, action.data);\r\n    console.log(result);\r\n    yield put({       \r\n      type: ADD_COMMENT_SUCCESS, \r\n      data: result.data\r\n    }) \r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result =  yield call(removePostAPI, action.data);\r\n    yield put({       \r\n      type: REMOVE_POST_SUCCESS, \r\n      data: result.data \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result =  yield call(likePostAPI, action.data);\r\n    yield put({       \r\n      type: LIKE_POST_SUCCESS, \r\n      data: result.data  \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result =  yield call(unlikePostAPI, action.data);\r\n    yield put({       \r\n      type: UNLIKE_POST_SUCCESS, \r\n      data: result.data  \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n  return axios.patch('/user/nickname', { nickname: data });\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n  try {\r\n    const result =  yield call(changeNicknameAPI, action.data);\r\n    yield put({       \r\n      type: CHANGE_NICKNAME_SUCCESS, \r\n      data: result.data  \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      data : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\n\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n    fork(watchRemovePost),\r\n    fork(watchLoadPosts),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n    fork(watchChangeNickname),\r\n  ])\r\n}"]},"metadata":{},"sourceType":"module"}