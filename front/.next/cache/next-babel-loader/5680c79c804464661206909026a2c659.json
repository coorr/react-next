{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeEvery, takeLatest, delay, throttle } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, RETWEET_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST } from '../reducers/post';\nimport { ADD_POST_TO_ME, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    console.log(result);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  console.log(data);\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    console.log(result);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: RETWEET_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchLoadRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPosts), fork(watchLikePost), fork(watchUnlikePost), fork(watchChangeNickname), fork(watchLoadUploadImages), fork(watchLoadRetweet)]);\n}","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/front/src/sagas/post.js"],"names":["axios","all","fork","call","put","takeEvery","takeLatest","delay","throttle","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","RETWEET_SUCCESS","RETWEET_FAILURE","RETWEET_REQUEST","ADD_POST_TO_ME","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","REMOVE_POST_OF_ME","loadPostsAPI","lastId","get","loadPosts","action","result","console","log","type","data","err","error","response","addPostAPI","post","addPost","id","addCommentAPI","postId","addComment","removePostAPI","delete","removePost","likePostAPI","patch","likePost","unlikePostAPI","unlikePost","changeNicknameAPI","nickname","changeNickname","uploadImagesAPI","uploadImages","retweetAPI","retweet","watchLoadPosts","watchAddPost","watchAddComment","watchRemovePost","watchLikePost","watchUnlikePost","watchChangeNickname","watchLoadUploadImages","watchLoadRetweet","postSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all ,fork, call, put, takeEvery, takeLatest, delay, throttle} from 'redux-saga/effects';\r\nimport { \r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, \r\n  REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, \r\n  LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, \r\n  LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, \r\n  LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE,\r\n  UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, RETWEET_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST,\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\nfunction loadPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.lastId);\r\n    console.log(result);\r\n    yield put({       \r\n      type: LOAD_POSTS_SUCCESS, \r\n      data: result.data\r\n    })\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post',  data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result =  yield call(addPostAPI, action.data);\r\n    yield put({       \r\n      type: ADD_POST_SUCCESS, \r\n      data: result.data,\r\n    })\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  console.log(data);\r\n  return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result =  yield call(addCommentAPI, action.data);\r\n    console.log(result);\r\n    yield put({       \r\n      type: ADD_COMMENT_SUCCESS, \r\n      data: result.data\r\n    }) \r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result =  yield call(removePostAPI, action.data);\r\n    yield put({       \r\n      type: REMOVE_POST_SUCCESS, \r\n      data: result.data \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result =  yield call(likePostAPI, action.data);\r\n    yield put({       \r\n      type: LIKE_POST_SUCCESS, \r\n      data: result.data  \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result =  yield call(unlikePostAPI, action.data);\r\n    yield put({       \r\n      type: UNLIKE_POST_SUCCESS, \r\n      data: result.data  \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n  return axios.patch('/user/nickname', { nickname: data });\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n  try {\r\n    const result =  yield call(changeNicknameAPI, action.data);\r\n    yield put({       \r\n      type: CHANGE_NICKNAME_SUCCESS, \r\n      data: result.data  \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post('/post/images', data);\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result =  yield call(uploadImagesAPI, action.data);\r\n    yield put({       \r\n      type: UPLOAD_IMAGES_SUCCESS, \r\n      data: result.data\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction retweetAPI(data) {\r\n  return axios.post(`/post/${data}/retweet`);\r\n}\r\n\r\nfunction* retweet(action) {\r\n  try {\r\n    const result =  yield call(retweetAPI, action.data);\r\n    yield put({       \r\n      type: RETWEET_SUCCESS, \r\n      data: result.data\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: RETWEET_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nfunction* watchLoadUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages)\r\n}\r\nfunction* watchLoadRetweet() {\r\n  yield takeLatest(RETWEET_REQUEST, retweet)\r\n}\r\n\r\n\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n    fork(watchRemovePost),\r\n    fork(watchLoadPosts),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n    fork(watchChangeNickname),\r\n    fork(watchLoadUploadImages),\r\n    fork(watchLoadRetweet),\r\n  ])\r\n}"]},"metadata":{},"sourceType":"module"}