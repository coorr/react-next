{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeEvery, takeLatest, delay, throttle } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, RETWEET_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction loadPostsAPI(lastId) {\n  // return axios.get(`/posts?lastId=${lastId || 0}`);\n  return axios.get('/posts');\n}\n\nfunction* loadPosts(action) {\n  try {\n    console.log(result);\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    console.log(result);\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    console.log(result);\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    console.log(result);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: RETWEET_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchLoadRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPosts), fork(watchLoadPost), fork(watchLikePost), fork(watchUnlikePost), fork(watchChangeNickname), fork(watchLoadUploadImages), fork(watchLoadRetweet)]);\n}","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/front/src/sagas/post.js"],"names":["axios","all","fork","call","put","takeEvery","takeLatest","delay","throttle","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","RETWEET_SUCCESS","RETWEET_FAILURE","RETWEET_REQUEST","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_TO_ME","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","REMOVE_POST_OF_ME","loadPostsAPI","lastId","get","loadPosts","action","console","log","result","data","type","err","error","response","loadPostAPI","loadPost","addPostAPI","post","addPost","id","addCommentAPI","postId","addComment","removePostAPI","delete","removePost","likePostAPI","patch","likePost","unlikePostAPI","unlikePost","changeNicknameAPI","nickname","changeNickname","uploadImagesAPI","uploadImages","retweetAPI","retweet","watchLoadPosts","watchLoadPost","watchAddPost","watchAddComment","watchRemovePost","watchLikePost","watchUnlikePost","watchChangeNickname","watchLoadUploadImages","watchLoadRetweet","postSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all ,fork, call, put, takeEvery, takeLatest, delay, throttle} from 'redux-saga/effects';\r\nimport { \r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, \r\n  REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, \r\n  LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, \r\n  LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, \r\n  LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE,\r\n  UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, \r\n  RETWEET_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST, \r\n  LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE,\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\nfunction loadPostsAPI(lastId) {\r\n  // return axios.get(`/posts?lastId=${lastId || 0}`);\r\n  return axios.get('/posts');\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    console.log(result);\r\n    const result = yield call(loadPostsAPI, action.data);\r\n    yield put({       \r\n      type: LOAD_POSTS_SUCCESS, \r\n      data: result.data\r\n    })\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }   \r\n}\r\n\r\nfunction loadPostAPI(data) {\r\n  return axios.get(`/post/${data}`);\r\n}\r\n\r\nfunction* loadPost(action) {\r\n  try {\r\n    console.log(result);\r\n    const result = yield call(loadPostAPI, action.data);\r\n    yield put({       \r\n      type: LOAD_POST_SUCCESS, \r\n      data: result.data\r\n    })\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post',  data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    console.log(result);\r\n    const result =  yield call(addPostAPI, action.data);\r\n    yield put({       \r\n      type: ADD_POST_SUCCESS, \r\n      data: result.data,\r\n    })\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result =  yield call(addCommentAPI, action.data);\r\n    console.log(result);\r\n    yield put({       \r\n      type: ADD_COMMENT_SUCCESS, \r\n      data: result.data\r\n    }) \r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result =  yield call(removePostAPI, action.data);\r\n    yield put({       \r\n      type: REMOVE_POST_SUCCESS, \r\n      data: result.data \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result =  yield call(likePostAPI, action.data);\r\n    yield put({       \r\n      type: LIKE_POST_SUCCESS, \r\n      data: result.data  \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result =  yield call(unlikePostAPI, action.data);\r\n    yield put({       \r\n      type: UNLIKE_POST_SUCCESS, \r\n      data: result.data  \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n  return axios.patch('/user/nickname', { nickname: data });\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n  try {\r\n    const result =  yield call(changeNicknameAPI, action.data);\r\n    yield put({       \r\n      type: CHANGE_NICKNAME_SUCCESS, \r\n      data: result.data  \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post('/post/images', data);\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result =  yield call(uploadImagesAPI, action.data);\r\n    yield put({       \r\n      type: UPLOAD_IMAGES_SUCCESS, \r\n      data: result.data\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction retweetAPI(data) {\r\n  return axios.post(`/post/${data}/retweet`);\r\n}\r\n\r\nfunction* retweet(action) {\r\n  try {\r\n    const result =  yield call(retweetAPI, action.data);\r\n    yield put({       \r\n      type: RETWEET_SUCCESS, \r\n      data: result.data\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: RETWEET_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\r\n}\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nfunction* watchLoadUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages)\r\n}\r\nfunction* watchLoadRetweet() {\r\n  yield takeLatest(RETWEET_REQUEST, retweet)\r\n}\r\n\r\n\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n    fork(watchRemovePost),\r\n    fork(watchLoadPosts),\r\n    fork(watchLoadPost),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n    fork(watchChangeNickname),\r\n    fork(watchLoadUploadImages),\r\n    fork(watchLoadRetweet),\r\n  ])\r\n}"]},"metadata":{},"sourceType":"module"}