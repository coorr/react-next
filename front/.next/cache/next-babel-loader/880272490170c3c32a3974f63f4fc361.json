{"ast":null,"code":"import React, { useCallback, useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport { Button, Checkbox, Form, Input } from 'antd';\nimport useInput from '../hooks/useInput';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST } from '../reducers/user';\nimport Router from 'next/router';\nimport wrapper from '../store/configureStore';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst ErrorMessage = styled.div.withConfig({\n  displayName: \"signup__ErrorMessage\",\n  componentId: \"sc-45yv95-0\"\n})([\"color:red;\"]);\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace('/');\n    }\n  }, [me && me.id]);\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  const {\n    0: term,\n    1: setTerm\n  } = useState('');\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password,\n        nickname\n      }\n    });\n  }, [email, password, passwordCheck, term]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785 | NodeBird\"\n      })\n    }), /*#__PURE__*/_jsxs(Form, {\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-email\",\n          type: \"email\",\n          value: email,\n          onChange: onChangeEmail,\n          required: true\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-nick\",\n          children: \"\\uB2C9\\uB124\\uC784\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-nick\",\n          value: nickname,\n          onChange: onChangeNickname,\n          required: true\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password\",\n          value: password,\n          type: \"password\",\n          onChange: onChangePassword,\n          required: true\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-password-check\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password-check\",\n          type: \"password\",\n          value: passwordCheck,\n          onChange: onChangePasswordCheck,\n          required: true\n        }), passwordError && /*#__PURE__*/_jsx(ErrorMessage, {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Checkbox, {\n          name: \"user-term\",\n          checked: term,\n          onChange: onChangeTerm,\n          children: \"\\uC57D\\uAD00 \\uB3D9\\uC758\\uD560 \\uAC83\\uC744 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"\n        }), termError && /*#__PURE__*/_jsx(ErrorMessage, {\n          children: \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: /*#__PURE__*/_jsx(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: signUpLoading,\n          children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n        })\n      })]\n    })]\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Signup;","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/front/src/pages/signup.js"],"names":["React","useCallback","useEffect","useState","Head","AppLayout","Button","Checkbox","Form","Input","useInput","styled","useDispatch","useSelector","LOAD_MY_INFO_REQUEST","SIGN_UP_REQUEST","Router","wrapper","END","axios","ErrorMessage","div","Signup","dispatch","signUpLoading","signUpDone","signUpError","me","state","user","replace","alert","id","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","e","target","value","term","setTerm","termError","setTermError","onChangeTerm","checked","onSubmit","type","data","marginTop","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,KAAjC,QAA8C,MAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,EAA+BC,eAA/B,QAAsD,kBAAtD;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,kBAAlB;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA,aAAF;AAAiBC,IAAAA,UAAjB;AAA6BC,IAAAA,WAA7B;AAAyCC,IAAAA;AAAzC,MAAgDd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAjE;AAEA3B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGuB,UAAH,EAAe;AACbT,MAAAA,MAAM,CAACc,OAAP,CAAe,GAAf;AACD;AACF,GAJQ,EAIN,CAACL,UAAD,CAJM,CAAT;AAMAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGwB,WAAH,EAAgB;AACdK,MAAAA,KAAK,CAACL,WAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,WAAD,CAJM,CAAT;AAMAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGyB,EAAE,IAAIA,EAAE,CAACK,EAAZ,EAAgB;AACdhB,MAAAA,MAAM,CAACc,OAAP,CAAe,GAAf;AACD;AACF,GAJQ,EAIN,CAACH,EAAE,IAAGA,EAAE,CAACK,EAAT,CAJM,CAAT;AAMA,QAAM,CAACC,KAAD,EAAQC,aAAR,IAAyBxB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACyB,QAAD,EAAWC,gBAAX,IAA+B1B,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAAC2B,QAAD,EAAWC,gBAAX,IAA+B5B,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM;AAAA,OAAC6B,aAAD;AAAA,OAAgBC;AAAhB,MAAoCrC,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAACsC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCvC,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMwC,qBAAqB,GAAG1C,WAAW,CAAE2C,CAAD,IAAO;AAC/CJ,IAAAA,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACAJ,IAAAA,gBAAgB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmBT,QAApB,CAAhB;AACD,GAHwC,EAGtC,CAACA,QAAD,CAHsC,CAAzC;AAKA,QAAM;AAAA,OAACU,IAAD;AAAA,OAAOC;AAAP,MAAkB7C,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAAC8C,SAAD;AAAA,OAAYC;AAAZ,MAA4B/C,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMgD,YAAY,GAAGlD,WAAW,CAAE2C,CAAD,IAAO;AACtCI,IAAAA,OAAO,CAACJ,CAAC,CAACC,MAAF,CAASO,OAAV,CAAP;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAH+B,EAG9B,EAH8B,CAAhC;AAKA,QAAMG,QAAQ,GAAGpD,WAAW,CAAC,MAAK;AAChC,QAAGoC,QAAQ,KAAKE,aAAhB,EAA+B;AAC7B,aAAOG,gBAAgB,CAAC,IAAD,CAAvB;AACD;;AACD,QAAG,CAACK,IAAJ,EAAU;AACR,aAAOG,YAAY,CAAC,IAAD,CAAnB;AACD;;AACD3B,IAAAA,QAAQ,CAAC;AACP+B,MAAAA,IAAI,EAAEvC,eADC;AAEPwC,MAAAA,IAAI,EAAE;AAAEtB,QAAAA,KAAF;AAASI,QAAAA,QAAT;AAAmBF,QAAAA;AAAnB;AAFC,KAAD,CAAR;AAID,GAX2B,EAWzB,CAACF,KAAD,EAAQI,QAAR,EAAkBE,aAAlB,EAAiCQ,IAAjC,CAXyB,CAA5B;AAcA,sBACE,MAAC,SAAD;AAAA,4BACE,KAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AADF,MADF,eAIE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAEM,QAAhB;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,YAAf;AAAA;AAAA,UADF,eAEE,cAFF,eAGE,KAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,IAAI,EAAC,OAA9B;AAAsC,UAAA,KAAK,EAAEpB,KAA7C;AAAoD,UAAA,QAAQ,EAAEC,aAA9D;AAA6E,UAAA,QAAQ;AAArF,UAHF;AAAA,QADF,eAME;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA,UADF,eAEE,cAFF,eAGE,KAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,KAAK,EAAEC,QAA/B;AAAyC,UAAA,QAAQ,EAAEC,gBAAnD;AAAqE,UAAA,QAAQ;AAA7E,UAHF;AAAA,QANF,eAWE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,eAAf;AAAA;AAAA,UADF,eAEE,cAFF,eAGE,KAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,KAAK,EAAEC,QAAnC;AAA6C,UAAA,IAAI,EAAC,UAAlD;AAA6D,UAAA,QAAQ,EAAEC,gBAAvE;AAAyF,UAAA,QAAQ;AAAjG,UAHF;AAAA,QAXF,eAgBE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,qBAAf;AAAA;AAAA,UADF,eAEE,cAFF,eAGE,KAAC,KAAD;AAAO,UAAA,IAAI,EAAC,qBAAZ;AAAkC,UAAA,IAAI,EAAC,UAAvC;AAAkD,UAAA,KAAK,EAAEC,aAAzD;AAAwE,UAAA,QAAQ,EAAEI,qBAAlF;AAAyG,UAAA,QAAQ;AAAjH,UAHF,EAIGF,aAAa,iBAAI,KAAC,YAAD;AAAA;AAAA,UAJpB;AAAA,QAhBF,eAsBE;AAAA,gCACE,KAAC,QAAD;AAAU,UAAA,IAAI,EAAC,WAAf;AAA2B,UAAA,OAAO,EAAEM,IAApC;AAA0C,UAAA,QAAQ,EAAEI,YAApD;AAAA;AAAA,UADF,EAEGF,SAAS,iBAAI,KAAC,YAAD;AAAA;AAAA,UAFhB;AAAA,QAtBF,eA0BE;AAAK,QAAA,KAAK,EAAE;AAACO,UAAAA,SAAS,EAAE;AAAZ,SAAZ;AAAA,+BACE,KAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,QAAQ,EAAC,QAAhC;AAAyC,UAAA,OAAO,EAAEhC,aAAlD;AAAA;AAAA;AADF,QA1BF;AAAA,MAJF;AAAA,IADF;AAqCD,CA3FD;;AA6FA,OAAO,MAAMiC,kBAAkB,GAAGxC,OAAO,CAACwC,kBAAR,CAA2B,MAAOC,OAAP,IAAoB;AAC/E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAxC,EAAAA,KAAK,CAAC2C,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAA+B,EAA/B;;AACA,MAAGL,OAAO,CAACE,GAAR,IAAeD,MAAlB,EAA0B;AACxBxC,IAAAA,KAAK,CAAC2C,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAA+BJ,MAA/B;AACD;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAczC,QAAd,CAAuB;AACrB+B,IAAAA,IAAI,EAAExC;AADe,GAAvB;AAGA4C,EAAAA,OAAO,CAACM,KAAR,CAAczC,QAAd,CAAuBL,GAAvB;AACE,QAAMwC,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBC,SAAvB,EAAN;AAEH,CAZiC,CAA3B;AAcP,eAAe5C,MAAf","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport Head from 'next/head';\r\nimport AppLayout from '../components/AppLayout';\r\nimport { Button, Checkbox, Form, Input } from 'antd';\r\nimport useInput from '../hooks/useInput';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST } from '../reducers/user';\r\nimport Router from 'next/router';\r\nimport wrapper from '../store/configureStore';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\n\r\nconst ErrorMessage = styled.div`\r\n  color:red;\r\n`\r\n\r\nconst Signup = () => {\r\n  const dispatch = useDispatch();\r\n  const { signUpLoading, signUpDone, signUpError,me } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if(signUpDone) {\r\n      Router.replace('/');\r\n    }\r\n  }, [signUpDone]);\r\n\r\n  useEffect(() => {\r\n    if(signUpError) {\r\n      alert(signUpError);\r\n    }\r\n  }, [signUpError]);\r\n\r\n  useEffect(() => {\r\n    if(me && me.id) {\r\n      Router.replace('/');\r\n    }\r\n  }, [me&& me.id]);\r\n\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [nickname, onChangeNickname] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const [passwordCheck, setPasswordCheck] = useState('');\r\n  const [passwordError, setPasswordError] = useState(false);\r\n\r\n  const onChangePasswordCheck = useCallback((e) => {\r\n    setPasswordCheck(e.target.value);\r\n    setPasswordError(e.target.value !== password);\r\n  }, [password]);\r\n\r\n  const [term, setTerm] = useState('');\r\n  const [termError, setTermError] = useState(false);\r\n  const onChangeTerm = useCallback((e) => {\r\n    setTerm(e.target.checked);\r\n    setTermError(false);\r\n  },[]);\r\n\r\n  const onSubmit = useCallback(()=> {\r\n    if(password !== passwordCheck) {\r\n      return setPasswordError(true);\r\n    }\r\n    if(!term) {\r\n      return setTermError(true);\r\n    }\r\n    dispatch({\r\n      type: SIGN_UP_REQUEST,\r\n      data: { email, password, nickname}\r\n    })\r\n  }, [email, password, passwordCheck, term])\r\n  \r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>회원가입 | NodeBird</title>\r\n      </Head>\r\n      <Form onFinish={onSubmit}>\r\n        <div>\r\n          <label htmlFor='user-email'>이메일</label>\r\n          <br />\r\n          <Input name='user-email' type=\"email\" value={email} onChange={onChangeEmail} required />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='user-nick'>닉네임</label>\r\n          <br />\r\n          <Input name='user-nick' value={nickname} onChange={onChangeNickname} required />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='user-password'>비밀번호</label>\r\n          <br />\r\n          <Input name='user-password' value={password} type=\"password\" onChange={onChangePassword} required />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='user-password-check'>비밀번호체크</label>\r\n          <br />\r\n          <Input name='user-password-check' type=\"password\" value={passwordCheck} onChange={onChangePasswordCheck} required />\r\n          {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage> }\r\n        </div>\r\n        <div>\r\n          <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm} >약관 동의할 것을 동의합니다.</Checkbox>\r\n          {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n        </div>\r\n        <div style={{marginTop: 10}}>\r\n          <Button type='primary' htmlType='submit' loading={signUpLoading}>가입하기</Button>\r\n        </div>\r\n      </Form>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) =>  {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie= '';\r\n  if(context.req && cookie) {\r\n    axios.defaults.headers.Cookie= cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  })\r\n  context.store.dispatch(END)\r\n    await context.store.sagaTask.toPromise();\r\n  \r\n})\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}