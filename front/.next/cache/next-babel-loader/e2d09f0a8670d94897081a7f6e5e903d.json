{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sysone\\\\Desktop\\\\react-next\\\\front\\\\src\\\\components\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nimport { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\nimport { Avatar, Button, Card, Popover, List, Comment } from 'antd';\nimport React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages.js';\nimport CommentForm from './CommentForm.js';\nimport PostCardContent from './PostCardContent.js';\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post.js';\nimport FollowButton from './FollowButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const onLike = useCallback(() => {\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onUnlike = useCallback(() => {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const liked = post.Likers.find(v => v.id === id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 34\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnlike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              loading: removePostLoading,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)],\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 22\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this),\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 24\n        }, this) // description={post.content}\n        ,\n        title: post.User.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 27\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostCard, \"92+Y782afqFaywqM2MDgLxExBVg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/front/src/components/PostCard.js"],"names":["EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","RetweetOutlined","Avatar","Button","Card","Popover","List","Comment","React","useState","useCallback","useDispatch","useSelector","PropTypes","PostImages","CommentForm","PostCardContent","LIKE_POST_REQUEST","REMOVE_POST_REQUEST","UNLIKE_POST_REQUEST","FollowButton","PostCard","post","dispatch","commentFormOpened","setCommentFormOpened","id","state","user","me","removePostLoading","onLike","type","data","onUnlike","onToggleComment","prev","onRemovePost","liked","Likers","find","v","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\r\nimport { Avatar, Button, Card, Popover, List, Comment } from 'antd';\r\nimport React, { useState,useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport PostImages from './PostImages.js';\r\nimport CommentForm from './CommentForm.js';\r\nimport PostCardContent from './PostCardContent.js';\r\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post.js';\r\nimport FollowButton from './FollowButton.js'\r\n\r\nconst PostCard = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  \r\n  const { removePostLoading } = useSelector((state) => state.post);\r\n\r\n  const onLike = useCallback(() => {\r\n    dispatch({\r\n      type: LIKE_POST_REQUEST,\r\n      data: post.id,\r\n    })\r\n  },[]);\r\n  const onUnlike = useCallback(() => {\r\n    dispatch({\r\n      type: UNLIKE_POST_REQUEST,\r\n      data: post.id,\r\n    })\r\n  },[]);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  },[]);\r\n\r\n  const onRemovePost = useCallback(() => {\r\n    dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: post.id\r\n    })\r\n  },[]);\r\n  const liked = post.Likers.find((v) => v.id === id);\r\n\r\n  return (\r\n    <div style={{marginBottom:20}}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} /> }\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onUnlike} />\r\n          : <HeartOutlined key=\"heart\"  onClick={onLike} />,\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover key=\"more\" content={(\r\n            <Button.Group>\r\n              { id && post.User.id === id ? (  \r\n                <>\r\n                <Button>수정</Button>\r\n                <Button type=\"danger\" onClick={onRemovePost} loading={removePostLoading}>삭제</Button>\r\n                </>\r\n              ) : <Button>신고</Button>}\r\n            </Button.Group>\r\n          )}>\r\n            <EllipsisOutlined   />\r\n          </Popover>,\r\n        ]}\r\n        extra={id && <FollowButton post={post} />}\r\n      >\r\n        <Card.Meta \r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          description={<PostCardContent postData={post.content} />}\r\n          // description={post.content}\r\n          title={post.User.nickname}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List \r\n            header={`${post.Comments.length}개의 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                  content={item.content}\r\n                />\r\n                \r\n              </li>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post : PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt : PropTypes.string,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n    Likers: PropTypes.arrayOf(PropTypes.object)\r\n  }).isRequired,\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}