{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sysone\\\\Desktop\\\\react-next\\\\src\\\\components\\\\PostCard.js\";\nimport { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\nimport { Avatar, Button, Card, Popover, List, Comment } from 'antd';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages.js';\nimport { useCallback } from 'react/cjs/react.development';\nimport CommentForm from './CommentForm.js';\nimport PostCardContent from './PostCardContent.js';\nimport { REMOVE_POST_REQUEST } from '../reducers/post.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 31\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id !== id ?\n          /*#__PURE__*/\n          // DB가 있을 경우 === 바꿔야함\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              loading: removePostLoading,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this),\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this) // description={post.content}\n        ,\n        title: post.User.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 27\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/src/components/PostCard.js"],"names":["EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","RetweetOutlined","Avatar","Button","Card","Popover","List","Comment","React","useState","useDispatch","useSelector","PropTypes","PostImages","useCallback","CommentForm","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","dispatch","liked","setLiked","commentFormOpened","setCommentFormOpened","id","state","user","me","removePostLoading","onToggleLike","prev","onToggleComment","onRemovePost","type","data","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\r\nimport { Avatar, Button, Card, Popover, List, Comment } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport PostImages from './PostImages.js';\r\nimport { useCallback } from 'react/cjs/react.development';\r\nimport CommentForm from './CommentForm.js';\r\nimport PostCardContent from './PostCardContent.js';\r\nimport { REMOVE_POST_REQUEST } from '../reducers/post.js';\r\n\r\nconst PostCard = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [liked, setLiked] = useState(false);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const { removePostLoading } = useSelector((state) => state.post);\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  },[]);\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  },[]);\r\n\r\n  const onRemovePost = useCallback(() => {\r\n    dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: post.id\r\n    })\r\n  })\r\n\r\n  return (\r\n    <div style={{marginBottom:20}}>\r\n      <Card\r\n        cover={post.Images && <PostImages images={post.Images} /> }\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n          : <HeartOutlined key=\"heart\"  onClick={onToggleLike} />,\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover key=\"more\" content={(\r\n            <Button.Group>\r\n              { id && post.User.id !== id ? (  // DB가 있을 경우 === 바꿔야함\r\n                <>\r\n                <Button>수정</Button>\r\n                <Button type=\"danger\" onClick={onRemovePost} loading={removePostLoading}>삭제</Button>\r\n                </>\r\n              ) : <Button>신고</Button>}\r\n            </Button.Group>\r\n          )}>\r\n            <EllipsisOutlined   />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta \r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          description={<PostCardContent postData={post.content} />}\r\n          // description={post.content}\r\n          title={post.User.nickname}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List \r\n            header={`${post.Comments.length}개의 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post : PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt : PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object)\r\n  }).isRequired,\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}